//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/ivy/movimentação/playerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""playerInput"",
    ""maps"": [
        {
            ""name"": ""personagem"",
            ""id"": ""dc5df602-3e4f-4431-8471-63a4877cb214"",
            ""actions"": [
                {
                    ""name"": ""movimento"",
                    ""type"": ""Value"",
                    ""id"": ""2ea4d93a-e332-4e4e-97a9-31a689b05e9c"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""pular"",
                    ""type"": ""Button"",
                    ""id"": ""55dbc023-0607-4b31-8088-f2d7ef3be4a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""atacar"",
                    ""type"": ""Button"",
                    ""id"": ""b491be50-5764-4405-991c-39b534f980ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Andar Control"",
                    ""type"": ""Value"",
                    ""id"": ""c8173912-8bef-42b7-a9d5-5d784934acd5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""teclado:WASD"",
                    ""id"": ""e30dba6d-e3a6-4e00-8dc4-694bbb8bd5f3"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""a56e215b-0f64-4bbc-871d-5d78ae56f1c7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""3e469829-d9f7-4b19-a3a8-9149ae22b6a5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""ce3c43ae-bcd1-4a72-8e33-bcff82d1279b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""a355456b-4a09-439a-a4e5-b46f5aaffac0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""00a8fc5d-839b-49e1-a68b-525da0983fbf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""c080983d-a2f4-4e47-aed8-2d1f4a06e7c8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""teclado: setas"",
                    ""id"": ""787456bb-42a9-4756-8949-45a878f9440b"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""7f909947-36ad-4792-9758-96a932050246"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""3def2f2c-cb98-4818-af76-db5814285c0a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""3e88e00a-9b30-44cb-99a6-cb7f9015ec14"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""fa189206-d26b-44eb-b075-afef838518a1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""190083a1-f92e-434b-b746-c69b2234c31c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""cb2fcf56-0921-4dd6-b599-e4427c479638"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b641109a-54dd-449c-a9fd-8ed60296fb68"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pular"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eff41c40-a5cd-40b7-ade2-2bb03667d327"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""atacar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f51aa3c9-1702-49e5-8ac4-af789da17222"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""87806fc0-dc03-4ebb-9151-c8191402cd75"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar Control"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aa7b2a32-acf1-4bba-a0aa-23916de4b2a8"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""484baa7e-ef04-4b35-bf5a-3c528396119f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // personagem
        m_personagem = asset.FindActionMap("personagem", throwIfNotFound: true);
        m_personagem_movimento = m_personagem.FindAction("movimento", throwIfNotFound: true);
        m_personagem_pular = m_personagem.FindAction("pular", throwIfNotFound: true);
        m_personagem_atacar = m_personagem.FindAction("atacar", throwIfNotFound: true);
        m_personagem_AndarControl = m_personagem.FindAction("Andar Control", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // personagem
    private readonly InputActionMap m_personagem;
    private List<IPersonagemActions> m_PersonagemActionsCallbackInterfaces = new List<IPersonagemActions>();
    private readonly InputAction m_personagem_movimento;
    private readonly InputAction m_personagem_pular;
    private readonly InputAction m_personagem_atacar;
    private readonly InputAction m_personagem_AndarControl;
    public struct PersonagemActions
    {
        private @PlayerInput m_Wrapper;
        public PersonagemActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @movimento => m_Wrapper.m_personagem_movimento;
        public InputAction @pular => m_Wrapper.m_personagem_pular;
        public InputAction @atacar => m_Wrapper.m_personagem_atacar;
        public InputAction @AndarControl => m_Wrapper.m_personagem_AndarControl;
        public InputActionMap Get() { return m_Wrapper.m_personagem; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PersonagemActions set) { return set.Get(); }
        public void AddCallbacks(IPersonagemActions instance)
        {
            if (instance == null || m_Wrapper.m_PersonagemActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PersonagemActionsCallbackInterfaces.Add(instance);
            @movimento.started += instance.OnMovimento;
            @movimento.performed += instance.OnMovimento;
            @movimento.canceled += instance.OnMovimento;
            @pular.started += instance.OnPular;
            @pular.performed += instance.OnPular;
            @pular.canceled += instance.OnPular;
            @atacar.started += instance.OnAtacar;
            @atacar.performed += instance.OnAtacar;
            @atacar.canceled += instance.OnAtacar;
            @AndarControl.started += instance.OnAndarControl;
            @AndarControl.performed += instance.OnAndarControl;
            @AndarControl.canceled += instance.OnAndarControl;
        }

        private void UnregisterCallbacks(IPersonagemActions instance)
        {
            @movimento.started -= instance.OnMovimento;
            @movimento.performed -= instance.OnMovimento;
            @movimento.canceled -= instance.OnMovimento;
            @pular.started -= instance.OnPular;
            @pular.performed -= instance.OnPular;
            @pular.canceled -= instance.OnPular;
            @atacar.started -= instance.OnAtacar;
            @atacar.performed -= instance.OnAtacar;
            @atacar.canceled -= instance.OnAtacar;
            @AndarControl.started -= instance.OnAndarControl;
            @AndarControl.performed -= instance.OnAndarControl;
            @AndarControl.canceled -= instance.OnAndarControl;
        }

        public void RemoveCallbacks(IPersonagemActions instance)
        {
            if (m_Wrapper.m_PersonagemActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPersonagemActions instance)
        {
            foreach (var item in m_Wrapper.m_PersonagemActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PersonagemActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PersonagemActions @personagem => new PersonagemActions(this);
    public interface IPersonagemActions
    {
        void OnMovimento(InputAction.CallbackContext context);
        void OnPular(InputAction.CallbackContext context);
        void OnAtacar(InputAction.CallbackContext context);
        void OnAndarControl(InputAction.CallbackContext context);
    }
}
